{"body": "<div class=\"section\" id=\"connectionactors\">\n<span id=\"id1\"></span><h1>ConnectionActors</h1>\n<p>The <a class=\"reference external\" href=\"https://github.com/spray/spray/blob/v1.1-M7/spray-io/src/main/scala/spray/io/ConnectionActors.scala\">ConnectionActors</a> trait can be mixed into either an <a class=\"reference internal\" href=\"../io-client/#ioclient\"><em>IOClient</em></a> or an <a class=\"reference internal\" href=\"../io-server/#ioserver\"><em>IOServer</em></a> and changes their\nbehavior to create a fresh <tt class=\"docutils literal\"><span class=\"pre\">IOConnectionActor</span></tt> for every newly established connection. These &#8220;connection actors&#8221;\nencapsulate connection-specific state and serve as handlers for all events coming in from the underlying\n<a class=\"reference internal\" href=\"../io-bridge/#iobridge\"><em>IOBridge</em></a>.</p>\n<p>Theoretically, in order to implement your own client- or server logic, it would suffice if <em>spray-io</em> gave you the\nability to somehow place your own <tt class=\"docutils literal\"><span class=\"pre\">Actor.Receive</span></tt> partial function directly in these connection actors.\nHowever, implementing non-trivial client- or server logic in a single, monolithic actor usually doesn&#8217;t yield very\nreadable and maintainable code. Rather an architecturally clean implementation would split up the logic into different,\nloosely coupled chunks, each handling only one very tightly scoped aspect of the whole client or server.</p>\n<p><em>spray-io</em> provides an infrastructure for this type of architecture with the concept of <a class=\"reference internal\" href=\"../pipelining/#pipelining\"><em>Pipelining</em></a>, for which\nthe <a class=\"reference external\" href=\"https://github.com/spray/spray/blob/v1.1-M7/spray-io/src/main/scala/spray/io/ConnectionActors.scala\">ConnectionActors</a> trait forms the basis.</p>\n</div>\n", "display_toc": false, "title": "ConnectionActors", "sourcename": "", "customsidebar": null, "current_page_name": "documentation/spray-io/connection-actors", "next": {"link": "../pipelining/", "title": "Pipelining"}, "rellinks": [["genindex", "General Index", "I", "index"], ["documentation/spray-io/pipelining", "Pipelining", "N", "next"], ["documentation/spray-io/io-server", "IOServer", "P", "previous"]], "meta": {}, "parents": [{"link": "../../", "title": "Documentation"}, {"link": "../", "title": "spray-io"}], "sidebars": null, "toc": "<ul>\n<li><a class=\"reference internal\" href=\"#\">ConnectionActors</a></li>\n</ul>\n", "prev": {"link": "../io-server/", "title": "IOServer"}, "metatags": ""}